name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Configurar PHP e Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2

      - name: Instalar dependências do Composer
        run: |
          echo "Instalando dependências do Composer..."
          composer install --prefer-dist --no-progress

      - name: Verificar se o Laravel foi instalado (verificar arquivo artisan)
        run: |
          echo "Verificando se o arquivo artisan está presente..."
          if [ -f artisan ]; then
            echo "Arquivo artisan encontrado!"
          else
            echo "Arquivo artisan não encontrado!"
            exit 1
          fi

      - name: Rodar testes
        run: |
          echo "Rodando testes do Laravel..."
          php artisan test

      - name: Criar o binário do projeto
        run: |
          echo "Criando o binário do projeto..."
          # Cria a pasta temporária
          mkdir -p binario
          # Copia todos os arquivos necessários, exceto os que devem ser excluídos
          rsync -av --progress --exclude=node_modules --exclude=.git --exclude=vendor --exclude=.env.testing --exclude=.env.local ./ binario/
          # Verifica se a pasta temporária não está vazia
          echo "Conteúdo da pasta binario:"
          ls -la binario
          # Cria o arquivo tar.gz a partir da pasta temporária
          tar -czf minhaaplicacao.tar.gz -C binario .
          # Limpa a pasta temporária
          rm -rf binario

      - name: Publicar binário como artefato
        uses: actions/upload-artifact@v3
        with:
          name: minhaaplicacao-binario
          path: minhaaplicacao.tar.gz

  build-docker:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Construir a imagem Docker
        run: |
          echo "Construindo a imagem Docker..."
          docker build -t andersonas/minhaaplicacao:${{ github.sha }} .
